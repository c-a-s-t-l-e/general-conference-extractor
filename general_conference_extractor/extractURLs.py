# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_Extract_URLs.ipynb.

# %% auto 0
__all__ = ['extract_talk_urls', 'generate_conference_urls']

# %% ../nbs/01_Extract_URLs.ipynb 3
from bs4 import BeautifulSoup
import requests
import re

def extract_talk_urls(html):
    '''
    Enter a url for general conference year such as:
    https://www.churchofjesuschrist.org/study/general-conference/1994/04?lang=eng
    '''
    response = requests.get(str(url))
    soup = BeautifulSoup(response.content, 'html.parser')

    # Define a regular expression pattern to match the desired URLs

    # for more recent talks
    url_pattern = re.compile(r'/study/general-conference/\d{4}/(04|10)/\d{2}[a-zA-Z]+.*\?lang=eng')

    # Find all <a> tags with an 'href' attribute that matches the pattern
    links = soup.find_all('a', href=url_pattern)
    
    # for older talks
    if len(links) == 0:
        url_pattern = re.compile(r'/study/general-conference/\d{4}/(04|10)/(?!.*session)[a-zA-Z]+.*\?lang=eng')
        links = soup.find_all('a', href=url_pattern)
    
    # Extract the URLs
    talk_urls = ['https://www.churchofjesuschrist.org/' + link['href'] for link in links]
    
    return talk_urls

# %% ../nbs/01_Extract_URLs.ipynb 5
def generate_conference_urls(start_year, end_year=None, most_recent_april=False):
    conference_urls = []
    months = ['04', '10']
    if end_year is None:
        urls = [f"https://www.churchofjesuschrist.org/study/general-conference/{start_year}/{month}?lang=eng" for month in months]
    else:
        urls = []
        for year in range(start_year, end_year+1, 1):
            year_urls = [f"https://www.churchofjesuschrist.org/study/general-conference/{year}/{month}?lang=eng" for month in months]
            urls.append(year_urls)
        urls = [item for sublist in urls for item in sublist]
        
        if most_recent_april == True:
            urls = urls[:-1]
            
    return urls
